import { useEffect, useRef } from "react";
import { Map, View } from "ol";
import { Tile as TileLayer } from "ol/layer";
import { Style, Icon } from "ol/style";
import { XYZ } from "ol/source";
import VectorLayer from "ol/layer/Vector";
import VectorSource from "ol/source/Vector";
import GeoJSON from "ol/format/GeoJSON.js";
import { FullScreen, defaults as defaultControls } from "ol/control";

const MFFStations = () => {
  //Icons
  const svgWind = `<svg width="40" height="40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >
    <path d="M31.5 20C31.5 26.3513 26.3513 31.5 20 31.5C13.6487 31.5 8.5 26.3513 8.5 20C8.5 13.6487 13.6487 8.5 20 8.5C26.3513 8.5 31.5 13.6487 31.5 20Z" fill="%2300A4EC" stroke="%230076C8"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M19.4887 14.7639C19.3776 14.7401 19.2629 14.747 19.1549 14.7838C19.0468 14.8207 18.9488 14.8864 18.8696 14.975C18.6052 15.2707 18.1722 15.2754 17.9025 14.9854C17.6328 14.6954 17.6285 14.2206 17.893 13.9248C18.1306 13.659 18.4247 13.4619 18.7489 13.3514C19.073 13.2409 19.4171 13.2203 19.7503 13.2915C20.0835 13.3628 20.3954 13.5235 20.658 13.7595C20.9206 13.9954 21.1257 14.2991 21.255 14.6433C21.3842 14.9876 21.4336 15.3617 21.3986 15.732C21.3636 16.1023 21.2454 16.4573 21.0545 16.7652C20.8636 17.073 20.6061 17.3242 20.305 17.496C20.0054 17.667 19.672 17.7542 19.3343 17.75H13.1839C12.8062 17.75 12.5 17.4142 12.5 16.9999C12.5 16.5857 12.8062 16.2499 13.1839 16.2499H19.3483C19.4614 16.2517 19.5732 16.2227 19.6736 16.1654C19.774 16.1081 19.8598 16.0244 19.9234 15.9218C19.9871 15.8191 20.0265 15.7008 20.0381 15.5774C20.0498 15.4539 20.0333 15.3292 19.9903 15.2145C19.9472 15.0997 19.8788 14.9985 19.7913 14.9199C19.7037 14.8412 19.5998 14.7876 19.4887 14.7639ZM25.3142 17.0239C25.1509 16.9869 24.9819 16.994 24.8217 17.0448C24.6615 17.0956 24.5151 17.1884 24.3949 17.3152C24.1229 17.6025 23.69 17.5935 23.428 17.2952C23.166 16.9968 23.1742 16.522 23.4463 16.2347C23.7265 15.9387 24.0683 15.7222 24.442 15.6037C24.8158 15.4853 25.2102 15.4685 25.5912 15.555C25.9722 15.6414 26.3282 15.8283 26.6285 16.0996C26.9287 16.3709 27.1641 16.7184 27.3144 17.112C27.4646 17.5055 27.5251 17.9333 27.4906 18.3583C27.4561 18.7833 27.3277 19.1927 27.1164 19.551C26.9052 19.9093 26.6175 20.2057 26.2783 20.4146C25.9391 20.6234 25.5585 20.7385 25.1696 20.7498C25.1636 20.7499 25.1576 20.75 25.1516 20.75H13.1839C12.8062 20.75 12.5 20.4142 12.5 20C12.5 19.5858 12.8062 19.25 13.1839 19.25H25.1414C25.3053 19.2439 25.4656 19.1947 25.6087 19.1066C25.754 19.0171 25.8773 18.89 25.9679 18.7365C26.0584 18.5829 26.1134 18.4075 26.1282 18.2254C26.143 18.0432 26.1171 17.8599 26.0527 17.6912C25.9883 17.5225 25.8874 17.3736 25.7587 17.2573C25.6301 17.1411 25.4775 17.0609 25.3142 17.0239ZM21.386 22.25C21.7236 22.2458 22.057 22.333 22.3566 22.504C22.6577 22.6758 22.9152 22.927 23.1061 23.2348C23.297 23.5427 23.4152 23.8977 23.4502 24.268C23.4852 24.6384 23.4358 25.0124 23.3066 25.3567C23.1773 25.7009 22.9722 26.0046 22.7096 26.2405C22.447 26.4765 22.1351 26.6372 21.8019 26.7085C21.4687 26.7797 21.1246 26.7591 20.8005 26.6486C20.4763 26.5381 20.1822 26.341 19.9446 26.0752C19.6801 25.7794 19.6844 25.3046 19.9541 25.0146C20.2238 24.7246 20.6568 24.7293 20.9212 25.025C21.0004 25.1137 21.0984 25.1793 21.2065 25.2162C21.3145 25.253 21.4292 25.2599 21.5403 25.2361C21.6514 25.2124 21.7553 25.1588 21.8429 25.0801C21.9304 25.0015 21.9988 24.9003 22.0419 24.7855C22.0849 24.6708 22.1014 24.5461 22.0897 24.4226C22.0781 24.2992 22.0387 24.1809 21.975 24.0782C21.9114 23.9756 21.8256 23.8919 21.7252 23.8346C21.6248 23.7773 21.513 23.7483 21.3999 23.75L21.3903 23.7502L13.1839 23.7501C12.8062 23.7501 12.5 23.4143 12.5 23.0001C12.5 22.5858 12.8062 22.25 13.1839 22.25H21.386Z" fill="%2309334B"/>
    </svg>`;
  const svgWare = `<svg width="40" height="40" version="1.1" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M31.5 20C31.5 26.3513 26.3513 31.5 20 31.5C13.6487 31.5 8.5 26.3513 8.5 20C8.5 13.6487 13.6487 8.5 20 8.5C26.3513 8.5 31.5 13.6487 31.5 20Z" fill="%234CDBCF" stroke="%2300AC96"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M14.1377 16.7436C13.6706 16.4166 13.2611 16.15 12.5 16.15V14.75C13.6139 14.75 14.2672 15.1834 14.8002 15.5564L14.8321 15.5788C15.3171 15.9184 15.6478 16.15 16.25 16.15C16.8522 16.15 17.1829 15.9184 17.6679 15.5788L17.6998 15.5564C18.2328 15.1834 18.8861 14.75 20 14.75C21.1132 14.75 21.7704 15.1827 22.3056 15.5557L22.3407 15.5801C22.8284 15.9202 23.1579 16.15 23.75 16.15C24.3421 16.15 24.6716 15.9202 25.1593 15.5801L25.1944 15.5557C25.7296 15.1827 26.3868 14.75 27.5 14.75V16.15C26.7382 16.15 26.324 16.4173 25.8547 16.7443L25.7842 16.7937C25.2999 17.1328 24.7042 17.55 23.75 17.55C22.7958 17.55 22.2001 17.1328 21.7158 16.7937L21.6453 16.7443C21.176 16.4173 20.7618 16.15 20 16.15C19.2389 16.15 18.8294 16.4166 18.3623 16.7436L18.2962 16.79C17.8109 17.1311 17.2149 17.55 16.25 17.55C15.2851 17.55 14.6891 17.1311 14.2038 16.79L14.1377 16.7436Z" fill="%2309334B"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M14.1377 20.5936C13.6706 20.2666 13.2611 20 12.5 20V18.6C13.6139 18.6 14.2672 19.0334 14.8002 19.4064L14.8321 19.4288C15.3171 19.7684 15.6478 20 16.25 20C16.8522 20 17.1829 19.7684 17.6679 19.4288L17.6998 19.4064C18.2328 19.0334 18.8861 18.6 20 18.6C21.1132 18.6 21.7704 19.0327 22.3056 19.4057L22.3407 19.4301C22.8284 19.7702 23.1579 20 23.75 20C24.3421 20 24.6716 19.7702 25.1593 19.4301L25.1944 19.4057C25.7296 19.0327 26.3868 18.6 27.5 18.6V20C26.7382 20 26.324 20.2673 25.8547 20.5943L25.7842 20.6437C25.2999 20.9828 24.7042 21.4 23.75 21.4C22.7958 21.4 22.2001 20.9828 21.7158 20.6437L21.6453 20.5943C21.176 20.2673 20.7618 20 20 20C19.2389 20 18.8294 20.2666 18.3623 20.5936L18.2962 20.64C17.8109 20.9811 17.2149 21.4 16.25 21.4C15.2851 21.4 14.6891 20.9811 14.2038 20.64L14.1377 20.5936Z" fill="%2309334B"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M14.1377 24.4436C13.6706 24.1166 13.2611 23.85 12.5 23.85V22.45C13.6139 22.45 14.2672 22.8834 14.8002 23.2564L14.8321 23.2788C15.3171 23.6184 15.6478 23.85 16.25 23.85C16.8522 23.85 17.1829 23.6184 17.6679 23.2788L17.6998 23.2564C18.2328 22.8834 18.8861 22.45 20 22.45C21.1132 22.45 21.7704 22.8827 22.3056 23.2557L22.3407 23.2801C22.8284 23.6202 23.1579 23.85 23.75 23.85C24.3421 23.85 24.6716 23.6202 25.1593 23.2801L25.1944 23.2557C25.7296 22.8827 26.3868 22.45 27.5 22.45V23.85C26.7382 23.85 26.324 24.1173 25.8547 24.4443L25.7842 24.4937C25.2999 24.8328 24.7042 25.25 23.75 25.25C22.7958 25.25 22.2001 24.8328 21.7158 24.4937L21.6453 24.4443C21.176 24.1173 20.7618 23.85 20 23.85C19.2389 23.85 18.8294 24.1166 18.3623 24.4436L18.2962 24.49C17.8109 24.8311 17.2149 25.25 16.25 25.25C15.2851 25.25 14.6891 24.8311 14.2038 24.49L14.1377 24.4436Z" fill="%2309334B"/>
    </svg>`;
  const svgCurrent = `<svg width="40" height="40" version="1.1" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M31.5 20C31.5 26.3513 26.3513 31.5 20 31.5C13.6487 31.5 8.5 26.3513 8.5 20C8.5 13.6487 13.6487 8.5 20 8.5C26.3513 8.5 31.5 13.6487 31.5 20Z" fill="%23FFA424" stroke="%23EF6800"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M24.4483 15.5971C25.9074 15.9443 26.7067 17.1241 27.0679 18.0204C27.216 18.3878 27.0558 18.8103 26.7058 18.9759C26.381 19.1297 26.001 19.0107 25.8104 18.7081C25.8097 18.7077 25.8089 18.7073 25.8081 18.7069C25.7606 18.6812 25.6724 18.6475 25.5416 18.6235C25.2794 18.5754 24.9397 18.5833 24.6206 18.6749C24.3022 18.7664 24.0555 18.9252 23.9041 19.1327C23.764 19.3249 23.6514 19.6315 23.7229 20.1487C23.837 20.9744 24.3391 21.6286 25.0086 22.13C25.6809 22.6334 26.4545 22.9283 26.9405 23.04C27.3256 23.1285 27.5684 23.523 27.4828 23.9211C27.3973 24.3192 27.0157 24.5702 26.6306 24.4818C25.9857 24.3336 25.0252 23.966 24.1707 23.3261C23.3135 22.6843 22.4962 21.7145 22.3087 20.3576C22.1916 19.5107 22.3618 18.7943 22.7635 18.2435C23.1541 17.7081 23.7084 17.4041 24.2383 17.2519C24.3361 17.2238 24.4348 17.2003 24.5337 17.1813C24.4077 17.12 24.2725 17.0708 24.1279 17.0364C23.2961 16.8385 21.8953 17.0677 19.7228 18.8559L17.5038 21.1499C16.9858 21.7509 16.1722 22.6122 15.3949 23.2557C15.0086 23.5756 14.5911 23.8757 14.1993 24.0504C14.0041 24.1375 13.7696 24.2145 13.5215 24.2192C13.2561 24.2243 12.9521 24.1444 12.7092 23.8933C12.4303 23.6049 12.4303 23.1374 12.7092 22.849C12.9394 22.611 13.2876 22.5694 13.5591 22.7242C13.579 22.7172 13.6037 22.7076 13.6335 22.6943C13.848 22.5986 14.1468 22.397 14.5019 22.1029C15.2003 21.5247 15.9622 20.7199 16.4502 20.1523C16.4595 20.1415 16.4691 20.131 16.479 20.1207L18.7409 17.7823C18.7595 17.763 18.7792 17.7448 18.7998 17.7278C21.1336 15.7975 22.9907 15.2503 24.4483 15.5971ZM25.8336 18.7228C25.8335 18.7228 25.8321 18.7219 25.8297 18.7198C25.8325 18.7217 25.8337 18.7228 25.8336 18.7228Z" fill="%2309334B"/>
    </svg>`;

  const mapRef = useRef<HTMLDivElement | null>(null);

  useEffect(() => {
    if (!mapRef.current) return;
    //icon style
    const iconTypes: any = {
      Wind: new Style({
        image: new Icon({
          src: "data:image/svg+xml;utf8," + svgWind,
        }),
      }),
      Wave: new Style({
        image: new Icon({
          src: "data:image/svg+xml;utf8," + svgWare,
        }),
      }),
      Current: new Style({
        image: new Icon({
          src: "data:image/svg+xml;utf8," + svgCurrent,
        }),
      }),
    };

    //layer with points

    const geoJsonLayer = new VectorLayer({
      source: new VectorSource({}),
      style: function (feautre) {
        const featureIcons: any = [];
        feautre.get("stationType").map((type: any, i: any) => {
          iconTypes[type].getImage().setDisplacement([i * 8, 0]);
          featureIcons.push(iconTypes[type]);
        });
        return featureIcons;
      },
    });

    //api and key
    const key = "arbWFpzMUfWfbX78oSoD";

    //map

    const mapSource = new TileLayer({
      source: new XYZ({
        url: "https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=" + key,
      }),
    });
    //view
    const view = new View({
      center: [17061066.362158317, -2849945.8991880207],
      zoom: 8,
      projection: "EPSG:3857",
    });

    //map with layer
    const map = new Map({
      target: mapRef.current,
      controls: defaultControls().extend([new FullScreen()]),
      layers: [mapSource, geoJsonLayer],
      view: view,
    });
    // fetch data for layer
    fetch("https://carn.dk/sites/openlayers/api/?k=MFF_Stations.json")
      .then((response) => response.json())
      .then((response) => {
        geoJsonLayer.getSource()?.addFeatures(new GeoJSON().readFeatures(response));
        map.addLayer(geoJsonLayer);
      })
      .catch((err) => console.error(err));

    return () => map.setTarget(undefined);
  }, []);
  return <div id="map" className="map" ref={mapRef} style={{ width: "100%", height: "400px" }} />;
};

export default MFFStations;
